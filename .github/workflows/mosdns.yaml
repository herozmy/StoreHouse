name: Release mosdns

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      # 克隆仓库
      - name: Clone mosdns repository
        uses: actions/checkout@v4
        with:
          repository: yyysuo/mosdns
          path: mosdns
          fetch-depth: 0

      # 生成版本号
      - name: Generate version
        id: version
        run: |
          cd mosdns
          COMMIT_HASH=$(git rev-parse --short HEAD)
          CURRENT_DATE=$(date +'%Y%m%d')
          VERSION="dev-mod-${CURRENT_DATE}-${COMMIT_HASH}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Generated version: ${VERSION}"

      # 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true
          cache: true

      # 构建并注入版本信息
      - name: Build mosdns
        run: |
          cd mosdns
          go build -ldflags "-X main.version=${{ steps.version.outputs.version }}" -o release/mosdns
        env:
          CGO_ENABLED: '0'

      # 运行打包脚本
      - name: Run release script
        run: |
          cd mosdns
          python ./release.py
        env:
          CGO_ENABLED: '0'

      # 列出生成的文件
      - name: List build directory
        run: ls -al ./mosdns/release

      # 如果脚本未生成 zip 文件，则手动打包
      - name: Create ZIP package
        if: failure()
        run: |
          cd mosdns/release
          zip -r mosdns_${{ steps.version.outputs.version }}.zip mosdns

      # 发布到 GitHub Releases
      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "MosDNS Build"
          body: |
            ### MosDNS Release
            **版本号**: ${{ steps.version.outputs.version }}
            **构建时间**: ${{ steps.version.outputs.version }}
            **Commit 哈希**: ${{ github.sha }}
          files: |
            ./mosdns/release/mosdns
            ./mosdns/release/*.zip
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
